#!/usr/bin/env ruby

require 'yaml'

dokku_root = (`echo $DOKKU_ROOT`).gsub(/\n/,"")
app, port, addr, vhost, subdomain, hostname, acl = ARGV
config = `cat /etc/haproxy/haproxy.cfg`
ps_file = "#{dokku_root}/#{app}/PS"
frontend_regex = /^.*use_backend b_#{app}.*\}$/
backend_regex = /^backend b_#{app}\n.*\#backend b_#{app}\n$/m

# app is removed/deleted so remove it here as well
unless File.exists?(ps_file)

  config.gsub!(frontend_regex,"")
  config.gsub!(backend_regex,"")

# updating
else

  ps = YAML.load_file(ps_file)

  acl = begin
    if (app == subdomain) && hostname != "#{app}.#{vhost}"
      "\tuse_backend b_#{app} if { hdr_end(host) -i #{hostname} }"
    else
      "\tuse_backend b_#{app} if { hdr_beg(host) -i #{app}. }"
    end
  end

  backend = "backend b_#{app}\n"
  ps.each { |process,scale|

    next if process != "web"

    if scale == 1
      backend << "\tserver s_#{app}_#{process}_1 #{addr}:#{port}\n"
    elsif scale.is_a(Array)
      scale.each { |i|
        backend << "\tserver s_#{app}_#{process}_#{i[:id]} #{i[:addr]}:#{i[:port]}\n"
      }
    end

  }
  backend << "#backend b_#{app}\n"

  if config.include? "use_backend b_#{app}"
    config.gsub!(frontend_regex,acl)
  else
    config.gsub!(/^\#ACL_END$/,"#{acl}\n#ACL_END")
  end

  if config.include? "backend b_#{app}\n"
    config.gsub!(backend_regex,backend)
  else
    config.gsub!(/^\#BCK_END$/,"#{backend}\n#BCK_END")
  end

end

File.open("/etc/haproxy/haproxy.cfg", "w") { |f|
  f.write config
}

puts "--> Haproxy Config changed"
puts `cat /etc/haproxy/haproxy.cfg`

